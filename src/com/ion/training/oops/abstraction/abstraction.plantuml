@startuml

title __ABSTRACTION's Class Diagram__\n

  namespace com.ion.training.oops.abstraction {
    class com.ion.training.oops.abstraction.Circle {
        ~ radius : double
        + Circle()
        + toString()
        ~ area()
    }
  }
  

  namespace com.ion.training.oops.abstraction {
    class com.ion.training.oops.abstraction.Rectangle {
        ~ length : double
        ~ width : double
        + Rectangle()
        + toString()
        ~ area()
    }
  }
  

  namespace com.ion.training.oops.abstraction {
    abstract class com.ion.training.oops.abstraction.Shape {
        ~ color : String
        + Shape()
        + getColor()
        {abstract} + toString()
        {abstract} ~ area()
    }
  }
  

  namespace com.ion.training.oops.abstraction {
    class com.ion.training.oops.abstraction.Test {
        {static} + main()
    }
  }
  

  com.ion.training.oops.abstraction.Circle -up-|> com.ion.training.oops.abstraction.Shape
  com.ion.training.oops.abstraction.Rectangle -up-|> com.ion.training.oops.abstraction.Shape


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
